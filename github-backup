#!/usr/bin/env php
<?php

function callGithubApi($url, $username, $password = null)
{
    if ( ! $password) {
        $password = readline('Please enter your GitHub password: ');
    }

    $handler = curl_init();

    curl_setopt($handler, CURLOPT_URL, $url);
    curl_setopt($handler, CURLOPT_USERPWD, sprintf('%s:%s', $username, $password));
    curl_setopt($handler, CURLOPT_HEADER, false);
    curl_setopt($handler, CURLOPT_RETURNTRANSFER, true);
    curl_setopt(
        $handler,
        CURLOPT_USERAGENT,
        ('Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko)' .
        ' Chrome/40.0.2214.111 Safari/537.36')
    );

    $contents = curl_exec($handler);

    curl_close($handler);

    if ( ! $contents) {
        return null;
    }

    return json_decode($contents, true);
}

function getUserRepos($user)
{
    $result = callGithubApi(sprintf(
        'https://api.github.com/users/%s/repos?type=owner',
        urlencode($user)
    ), $user);

    if (array_key_exists('message', $result)) {
        return null;
    }

    return array_map(function ($row) {
        return $row['name'];
    }, $result);
}

function getUsername($argv)
{
    if (count($argv) < 2) {
        return null;
    }

    $username = trim($argv[1]);

    if (strpos($username, '@') === 0) {
        $username = substr($username, 1);
    }

    return $username;
}

function makeBackup($argv)
{
    if ( ! $username = getUsername($argv)) {
        die('No username given.' . PHP_EOL);
    }

    printf('Downloading repos owned by @%s.%s', $username, PHP_EOL);

    if ( ! $repos = getUserRepos($username)) {
        die('User does not exist or wrong credentials.' . PHP_EOL);
    }

    foreach ($repos as $repoName) {
        echo $repoName, PHP_EOL;
    }
}

error_reporting(E_ALL);
ini_set('display_errors', true);
set_time_limit(0);

makeBackup($argv);
